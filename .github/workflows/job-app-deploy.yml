name: job-app-deploy

on:
  workflow_call:
    inputs:
      configFile:
        description: Configuration File.
        type: string
        required: true

      configGlobal:
        description: Global Configuration File.
        type: string
        required: true

      deploymentName:
        description: Azure Deployment Name.
        type: string
        required: true

      environment:
        description: The environment that the job references in GitHub (non-prod, prod).
        type: string
        required: true

      envLocation:
        description: Environment Location.
        type: string
        required: true

    secrets:
      AZURE_CLIENT_ID:
        description: The client ID of the Azure AD service principal to use for authenticating to Azure.
        required: true

      AZURE_SUBSCRIPTION_ID:
        description: The ID of the Azure subscription to create the resources in.
        required: true

      AZURE_TENANT_ID:
        description: The ID of the Azure tenant to create the resources in.
        required: true

jobs:
  app-deploy:
    name: app-deploy
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    defaults:
      run:
        shell: pwsh
    env:
      CONFIG_FILE: ${{ inputs.configFile }}
      CONFIG_GLOBAL: ${{ inputs.configGlobal }}
      DEPLOYMENT_NAME: ${{ inputs.deploymentName }}
      ENV_LOCATION: ${{ inputs.envLocation }}

    steps:
      # checkout code
      - name: checkout-code
        uses: actions/checkout@v2

      # azure login
      - name: azure-login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          enable-AzPSSession: true

      # app-deploy
      - name: app-deploy
        uses: azure/powershell@v1
        with:
          azPSVersion: "latest"
          inlineScript: |
            # Variables
            $config            = Get-Content $env:CONFIG_FILE | ConvertFrom-Json -AsHashtable
            $configGlobal      = Get-Content $env:CONFIG_GLOBAL | ConvertFrom-Json -AsHashtable
            $envLocation       = $env:ENV_LOCATION
            $appName           = $config.$envLocation.shared.appName
            $appType           = $config.$envLocation.shared.appType
            $containerRegistry = $configGlobal.$envLocation.resources.containerRegistry
            $envName           = $config.$envLocation.shared.envName
            $repository        = $configGlobal.$envLocation.resources.repository.$appType
            $rgName            = $configGlobal.$envLocation.resourceGroups.$envName

            # Publish application
            az webapp config container set `
                --resource-group $rgName `
                --name $appName `
                --docker-registry-server-url "https://$($containerRegistry).azurecr.io" `
                --docker-custom-image-name "$containerRegistry.azurecr.io/$($repository):${{ github.run_number }}" `
                --output none
