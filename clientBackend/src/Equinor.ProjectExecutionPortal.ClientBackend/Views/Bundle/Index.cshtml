@using Equinor.ProjectExecutionPortal.ClientBackend.Configurations
@using Microsoft.Extensions.Options
@inject IOptions<ClientBundleOptions> ClientBundleOptions;
@inject IOptions<FusionPortalApiOptions> FusionPortalApiOptions;
@inject IOptions<FusionProjectPortalApiOptions> FusionProjectPortalApiOptions;
@inject IOptions<FusionBookmarksOptions> FusionBookmarksOptions;
@inject IWebHostEnvironment Env;

@{
    var clientBundle = ClientBundleOptions.Value;
    var fusionPortalApi = FusionPortalApiOptions.Value;
    var fusionProjectPortalApi = FusionProjectPortalApiOptions.Value;
    var fusionBookmarks = FusionBookmarksOptions.Value;
}

<div id="root"></div>

<script>
    var portalConfig = {
        "title": "@clientBundle.Title",
        "description": "@clientBundle.Description",
        "serviceDiscovery": {
            "client": {
                "baseUri": "@fusionPortalApi.BaseAddress",
                "defaultScopes": [
                    "@fusionPortalApi.Scope"
                ]
            }
        },
        "portalClient": {
            "client": {
                "baseUri": "@fusionProjectPortalApi.BaseAddress",
                "defaultScopes": [
                    "@fusionProjectPortalApi.Scope"
                ]
            }
        },
        "bookmarks": {
            "name": "@fusionBookmarks.Name",
            "identifier": "@fusionBookmarks.Identifier",
            "subsystem": "@fusionBookmarks.Subsystem"
        },
        "msal": {
            "client": {
                "tenantId": "@clientBundle.Msal!.TenantId",
                "clientId": "@clientBundle.Msal!.ClientId",
                "redirectUri": "@clientBundle.Msal!.RedirectUri"
            },
            "options": {
                "requiresAuth": true
            }
        },
        "logger": {
            "level": 0,
            "defaultClientLogger": {
                "active": false,
                "level": 0
            }
        },
        "agGrid": {
            "licenseKey": "@clientBundle.AgGrid!.LicenseKey"
        }
    };

    window["_config_"] = portalConfig;
</script>

@if (Env.IsDevelopment())
{
    <script type="module" src="~/portal-client-bundle-dev.js"></script>
}
else
{
    <script type="module" src="~/portal-client-bundle.js"></script>
}